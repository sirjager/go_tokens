{
  "swagger": "2.0",
  "info": {
    "title": "Tokens Api",
    "version": "0.2",
    "contact": {
      "name": "Ankur Kumar",
      "url": "https://github.com/sirjager"
    }
  },
  "tags": [
    {
      "name": "Tokens"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Welcome Message",
        "description": "returs a welcome message",
        "operationId": "Tokens_TokensWelcome",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tokensTokensWelcomeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "System"
        ]
      }
    },
    "/health": {
      "get": {
        "summary": "Api Health",
        "description": "use this route to check if api is working or not",
        "operationId": "Tokens_TokensHealth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tokensTokensHealthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "System"
        ]
      }
    },
    "/v1/create": {
      "post": {
        "summary": "Create Token",
        "description": "use this route to create token",
        "operationId": "Tokens_TokensCreate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tokensTokensCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tokensTokensCreateRequest"
            }
          }
        ],
        "tags": [
          "Tokens"
        ]
      }
    },
    "/v1/verify": {
      "post": {
        "summary": "Verify Token",
        "description": "use this router to verify token",
        "operationId": "Tokens_TokensVerify",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/tokensTokensVerifyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tokensTokensVerifyRequest"
            }
          }
        ],
        "tags": [
          "Tokens"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "tokensTokensCreateRequest": {
      "type": "object",
      "properties": {
        "payload": {
          "type": "string"
        }
      }
    },
    "tokensTokensCreateResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/tokensTokensPayload"
        }
      }
    },
    "tokensTokensHealthResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "protected": {
          "type": "boolean"
        },
        "uptime": {
          "type": "string"
        },
        "started": {
          "type": "string",
          "format": "date-time"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "tokensTokensPayload": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "iat": {
          "type": "string",
          "format": "date-time"
        },
        "expires": {
          "type": "string",
          "format": "date-time"
        },
        "payload": {
          "$ref": "#/definitions/tokensTokensPayloadData"
        }
      }
    },
    "tokensTokensPayloadData": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "tokensTokensVerifyRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "tokensTokensVerifyResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "iat": {
          "type": "string",
          "format": "date-time"
        },
        "expires": {
          "type": "string",
          "format": "date-time"
        },
        "payload": {
          "$ref": "#/definitions/tokensTokensPayloadData"
        }
      }
    },
    "tokensTokensWelcomeResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  }
}
